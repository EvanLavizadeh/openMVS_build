# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.17)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Common IO Math MVS)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Common
add_library(Common STATIC IMPORTED)

set_target_properties(Common PROPERTIES
  INTERFACE_LINK_LIBRARIES "Boost::iostreams;Boost::program_options;Boost::system;Boost::serialization;\$<\$<CONFIG:DEBUG>://lib64/libopencv_calib3d.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_contrib.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_core.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_features2d.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_flann.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_highgui.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_imgproc.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_legacy.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_ml.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_objdetect.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_photo.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_stitching.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_superres.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_ts.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_video.so>;\$<\$<CONFIG:DEBUG>://lib64/libopencv_videostab.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_calib3d.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_contrib.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_core.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_features2d.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_flann.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_highgui.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_imgproc.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_legacy.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_ml.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_objdetect.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_photo.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_stitching.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_superres.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_ts.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_video.so>;\$<\$<NOT:\$<CONFIG:DEBUG>>://lib64/libopencv_videostab.so>"
)

# Create imported target IO
add_library(IO STATIC IMPORTED)

set_target_properties(IO PROPERTIES
  INTERFACE_LINK_LIBRARIES "Common;/usr/lib64/libpng.so;/usr/lib64/libz.so;/usr/lib64/libjpeg.so;/usr/lib64/libtiff.so"
)

# Create imported target Math
add_library(Math STATIC IMPORTED)

set_target_properties(Math PROPERTIES
  INTERFACE_LINK_LIBRARIES "Common"
)

# Create imported target MVS
add_library(MVS STATIC IMPORTED)

set_target_properties(MVS PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Common>;\$<LINK_ONLY:Math>;\$<LINK_ONLY:IO>"
)

# Import target "Common" for configuration "Release"
set_property(TARGET Common APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Common PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/evan/openMVS_build/lib/libCommon.a"
  )

# Import target "IO" for configuration "Release"
set_property(TARGET IO APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(IO PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/evan/openMVS_build/lib/libIO.a"
  )

# Import target "Math" for configuration "Release"
set_property(TARGET Math APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Math PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/evan/openMVS_build/lib/libMath.a"
  )

# Import target "MVS" for configuration "Release"
set_property(TARGET MVS APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(MVS PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/evan/openMVS_build/lib/libMVS.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
